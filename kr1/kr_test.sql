USE EXAM;
GO


-- Задание №1
SELECT *
FROM ORDERS
WHERE ORDER_DATE > '2007-12-31'
ORDER BY ORDER_DATE
;


-- Задание №2
SELECT 
	OFFICES.OFFICE,
	OFFICES.CITY,
	OFFICES.REGION,
	OFFICES.MGR,
	SALESREPS.NAME,
	OFFICES.TARGET,
	OFFICES.SALES
FROM 
	OFFICES
	INNER JOIN SALESREPS ON SALESREPS.EMPL_NUM = OFFICES.MGR
WHERE
	OFFICES.REGION = 'Eastern'
	AND SALESREPS.NAME = 'Bob Smith'
;


-- Задание №3
SELECT * 
FROM ORDERS 
WHERE ORDER_DATE BETWEEN '2007-10-12' AND '2008-01-20'
ORDER BY ORDER_DATE
;


-- Задание №4
SELECT * 
FROM OFFICES
WHERE OFFICE IN (12, 13, 21)
;


-- Задание №5
SELECT *
FROM SALESREPS
WHERE MANAGER IS NULL
;


-- Задание №6
SELECT *
FROM OFFICES
WHERE REGION LIKE 'East%'
;


-- Задание №7
SELECT
	NAME,
	HIRE_DATE
FROM SALESREPS
ORDER BY AGE
;


-- Задание №8
SELECT *
FROM ORDERS
ORDER BY 
	AMOUNT DESC, 
	QTY ASC
;


-- Задание №9
SELECT TOP 5
	*
FROM PRODUCTS
ORDER BY PRICE DESC
;


-- Задание №10
SELECT TOP 20 percent
	*
FROM ORDERS
ORDER BY AMOUNT DESC
;


-- Задание №11
SELECT *
FROM SALESREPS
WHERE EMPL_NUM BETWEEN 104 AND 107
ORDER BY HIRE_DATE
;


-- Задание №12
SELECT DISTINCT
	PRODUCTS.MFR_ID,
	PRODUCTS.PRODUCT_ID,
	PRODUCTS.DESCRIPTION,
	PRODUCTS.PRICE,
	PRODUCTS.QTY_ON_HAND
FROM
	ORDERS
	INNER JOIN PRODUCTS ON PRODUCTS.MFR_ID = ORDERS.MFR AND PRODUCTS.PRODUCT_ID = ORDERS.PRODUCT
;


-- Задание №13
SELECT
	CUSTOMERS.COMPANY,
	COUNT(*) AS 'Count'
FROM
	ORDERS
	INNER JOIN CUSTOMERS ON CUSTOMERS.CUST_NUM = ORDERS.CUST
GROUP BY
	CUSTOMERS.COMPANY
;


-- Задание №14
SELECT
	CUSTOMERS.COMPANY,
	SUM(ORDERS.AMOUNT) AS 'Sum'
FROM
	ORDERS
	INNER JOIN CUSTOMERS ON CUSTOMERS.CUST_NUM = ORDERS.CUST
GROUP BY
	CUSTOMERS.COMPANY
;


-- Задание №15
SELECT
	SALESREPS.NAME,
	AVG(ORDERS.AMOUNT) AS 'Avg'
FROM
	ORDERS
	INNER JOIN SALESREPS ON SALESREPS.EMPL_NUM = ORDERS.REP
GROUP BY
	SALESREPS.NAME
;


-- Здание №16
SELECT 
	*
FROM PRODUCTS AS pr
WHERE pr.PRICE = (SELECT MAX(pr1.PRICE) FROM PRODUCTS AS pr1 WHERE pr1.MFR_ID = pr.MFR_ID)
;


-- Задание №17
SELECT
	CUSTOMERS.COMPANY AS 'Наименование покупателя',
	PRODUCTS.DESCRIPTION AS 'Наименование товара',
	PRODUCTS.MFR_ID AS 'Производитель',
	ORDERS.QTY AS 'Количество',
	ORDERS.AMOUNT AS 'Итоговая сумма'
FROM
	ORDERS
	INNER JOIN CUSTOMERS ON CUSTOMERS.CUST_NUM = ORDERS.CUST
	INNER JOIN PRODUCTS ON PRODUCTS.MFR_ID = ORDERS.MFR AND PRODUCTS.PRODUCT_ID = ORDERS.PRODUCT
;


-- Задание №18
SELECT
	CUSTOMERS.COMPANY,
	ORDERS.ORDER_NUM
FROM
	CUSTOMERS
	LEFT OUTER JOIN ORDERS ON ORDERS.CUST = CUSTOMERS.CUST_NUM
;


-- Задание №19
SELECT
	cust.COMPANY
FROM
	ORDERS AS ord
	RIGHT OUTER JOIN CUSTOMERS AS cust ON cust.CUST_NUM = ord.CUST
WHERE
	not exists(SELECT * FROM ORDERS AS ord1 WHERE ord1.CUST = ord.CUST)
;


-- Задание №20
SELECT
	CUSTOMERS.COMPANY
FROM 
	ORDERS
	INNER JOIN CUSTOMERS ON CUSTOMERS.CUST_NUM = ORDERS.CUST
WHERE ORDER_DATE BETWEEN '2007-10-12' AND '2008-01-20'
;	


-- Задание №21
SELECT DISTINCT
	PRODUCTS.MFR_ID,
	PRODUCTS.PRODUCT_ID,
	PRODUCTS.DESCRIPTION,
	PRODUCTS.PRICE,
	PRODUCTS.QTY_ON_HAND
FROM
	ORDERS
	INNER JOIN CUSTOMERS ON CUSTOMERS.CUST_NUM = ORDERS.CUST
	INNER JOIN PRODUCTS ON PRODUCTS.MFR_ID = ORDERS.MFR AND PRODUCTS.PRODUCT_ID = ORDERS.PRODUCT
WHERE CUSTOMERS.CREDIT_LIMIT > 40000
;


-- Задание №22
SELECT
	AGE,
	STRING_AGG(NAME, ', ') AS 'Names'
FROM SALESREPS
GROUP BY AGE
HAVING COUNT(NAME) > 1
ORDER BY AGE
;


-- Задание №23
SELECT
	cust.COMPANY
FROM 
	ORDERS AS ord
	INNER JOIN CUSTOMERS AS cust ON cust.CUST_NUM = ord.CUST
GROUP BY cust.COMPANY, ord.CUST
ORDER BY 
	(SELECT SUM(ord1.AMOUNT) FROM ORDERS AS ord1 WHERE ord1.CUST = ord.CUST)
	DESC
;


-- Задание №24
SELECT *
FROM ORDERS
WHERE AMOUNT > (SELECT AVG(AMOUNT) FROM ORDERS)
;


-- Задание №25
SELECT
	OFFICE,
	SUM(AMOUNT) AS 'Sum'
FROM
	ORDERS
	INNER JOIN SALESREPS ON SALESREPS.EMPL_NUM = ORDERS.REP
	INNER JOIN OFFICES ON OFFICES.OFFICE = SALESREPS.REP_OFFICE
GROUP BY OFFICE
ORDER BY SUM(AMOUNT) DESC
;


-- Задание №26
SELECT * 
FROM SALESREPS AS sl
WHERE exists(
	SELECT *
	FROM SALESREPS as sl1
	WHERE sl1.MANAGER = sl.EMPL_NUM
)
;


-- Задание №27
SELECT * 
FROM SALESREPS AS sl
WHERE not exists(
	SELECT *
	FROM SALESREPS as sl1
	WHERE sl1.MANAGER = sl.EMPL_NUM
)
;


-- Задание №28
SELECT * FROM SALESREPS;
SELECT DISTINCT
	PRODUCTS.MFR_ID,
	PRODUCTS.PRODUCT_ID,
	PRODUCTS.DESCRIPTION,
	PRODUCTS.PRICE,
	PRODUCTS.QTY_ON_HAND
FROM
	ORDERS
	INNER JOIN PRODUCTS ON PRODUCTS.MFR_ID = ORDERS.MFR AND PRODUCTS.PRODUCT_ID = ORDERS.PRODUCT
	INNER JOIN SALESREPS ON SALESREPS.EMPL_NUM = ORDERS.REP
	INNER JOIN OFFICES ON OFFICES.OFFICE = SALESREPS.REP_OFFICE
WHERE
	OFFICES.REGION = 'Eastern'
;


select PRODUCTS.MFR_ID,  PRODUCTS.PRODUCT_ID , OFFICES.REGION  from  PRODUCTS
inner join ORDERS on ORDERS.MFR = PRODUCTS.MFR_ID and PRODUCTS.PRODUCT_ID = ORDERS.PRODUCT
inner join CUSTOMERS on CUSTOMERS.CUST_NUM = ORDERS.CUST
inner join SALESREPS on CUSTOMERS.CUST_REP = SALESREPS.EMPL_NUM 
inner join OFFICES on OFFICES.OFFICE =  SALESREPS.REP_OFFICE where OFFICES.REGION = 'Eastern'
group by PRODUCTS.MFR_ID,PRODUCTS.PRODUCT_ID , OFFICES.REGION


-- Задание №29
SELECT DISTINCT
	ord.CUST,
	pr.MFR_ID,
	pr.PRODUCT_ID,
	--pr.DESCRIPTION,
	pr.PRICE,
	--pr.QTY_ON_HAND,
	(SELECT AVG(ord1.AMOUNT) FROM ORDERS AS ord1 WHERE ord1.CUST = ord.CUST) AS 'AVG'
FROM 
	ORDERS AS ord
	CROSS JOIN PRODUCTS as pr
WHERE
	pr.PRICE < (SELECT AVG(ord1.AMOUNT) FROM ORDERS AS ord1 WHERE ord1.CUST = ord.CUST)
ORDER BY
	ord.CUST
;


-- Задание №30 (а)
SELECT
	cust.COMPANY
FROM
	ORDERS AS ord
	INNER JOIN CUSTOMERS AS cust ON cust.CUST_NUM = ord.CUST
WHERE
	not exists(
		SELECT * 
		FROM ORDERS AS ord1 INNER JOIN CUSTOMERS AS cust1 ON cust1.CUST_NUM = ord1.CUST
		WHERE ord1.CUST = ord.CUST AND YEAR(ord1.ORDER_DATE) = 2008
	)
	AND exists(
		SELECT * 
		FROM ORDERS AS ord2 INNER JOIN CUSTOMERS AS cust2 ON cust2.CUST_NUM = ord2.CUST
		WHERE ord2.CUST = ord.CUST AND YEAR(ord2.ORDER_DATE) = 2007
	)
;


-- Задание №30 (б)
SELECT
	CUSTOMERS.COMPANY
FROM
	CUSTOMERS
	INNER JOIN ORDERS AS ord1 ON ord1.CUST = CUSTOMERS.CUST_NUM AND YEAR(ord1.ORDER_DATE) = 2007
	LEFT OUTER JOIN ORDERS ord2 ON ord2.CUST = CUSTOMERS.CUST_NUM AND YEAR(ord2.ORDER_DATE) = 2008
WHERE ord2.ORDER_NUM IS NULL
;
